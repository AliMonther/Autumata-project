
package projectautumata;
import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;
 

public class ProjectAutumata { 
        static String filePath;
       static String textFieldValue=new String();
      static char[]word ={};
    //تابع يختبر انتماء عنصر الى مجموعة عناصر
    public static boolean testBelongingChartosetOfChars(char c,char[]setOfChar) {
        int w = setOfChar.length;

        for (int i = 0; i < setOfChar.length; i++) {
            if (c == setOfChar[i]) {
                w++;
            }
        }

        if (w == setOfChar.length) {
            return false;
        } else {
            return true;
        }

    }
    public static String Type(char[] word)
    { String wordType="";
        char numbers[]={'0','1','2','3','4','5','6','7','8','9'};
        //اذا كان اول محرف وآخر محرف رقم ولايحوي نقطة يكون رقم صحيح
        if(!testBelongingChartosetOfChars('.',word)&&testBelongingChartosetOfChars(word[0],numbers)&&testBelongingChartosetOfChars(word[word.length-1],numbers))
        {
          //  System.out.println(" Integer number");
            wordType=" Integer number";
        }
         
        if(testBelongingChartosetOfChars('.',word)&&testBelongingChartosetOfChars(word[0],numbers)&&testBelongingChartosetOfChars(word[word.length-1],numbers))
        {
            //System.out.println(" float number");
            wordType="float number";
        }
        if(!testBelongingChartosetOfChars(' ',word)&&!testBelongingChartosetOfChars(word[0],numbers))
        {
           // System.out.println("keyWord");
            wordType="keyWord";
        }
        if(word[0]=='/'&&word[1]=='/')
        {
            //System.out.println("comment one line");
            wordType="comment one line";
        }
        if(word[0]=='/'&&word[1]=='*')
        {
            //System.out.println("comment multiline");
            wordType="comment multiline";
        }
        if(testBelongingChartosetOfChars(';',word)&&!testBelongingChartosetOfChars('/',word))
        {
            //System.out.println("declaration and initialization variable");
            wordType="declaration and initialization variable";
        }
        if(testBelongingChartosetOfChars(';',word)&&testBelongingChartosetOfChars('/',word))
        {
            //System.out.println("declaration and initialization variable with comment");
            wordType="declaration and initialization variable with comment";
        }
       
        return wordType;
    }
      
    public static void main(String[] args) throws IOException, InterruptedException {
         
        //---------------------GUI---------------------
        JFrame frame = new JFrame();
        Font  f1  = new Font(Font.SERIF,  Font.ITALIC,  60);
        Font  f2  = new Font(Font.SERIF,  Font.BOLD|Font.ITALIC,  25);
        Font  f3  = new Font(Font.SERIF,  Font.BOLD|Font.ITALIC,  20);
        
        JLabel mainText = new JLabel("DFA Accepter");
        mainText.setFont(f1);
        mainText.setBounds(140, 3, 500, 70);
        mainText.setForeground(Color.green);
        
        
        JButton selectBtn = new JButton("Select File");
        selectBtn.setForeground(Color.red);
        selectBtn.addActionListener(new ActionListener() 
       { 
        @Override
         public void actionPerformed(ActionEvent e)
        { 
     JFileChooser selectFile = new JFileChooser() ;
      selectFile.showOpenDialog(null);
      filePath = selectFile.getSelectedFile().getPath().toString();
      
            System.out.println(filePath);
        } 
    }    );
        selectBtn.setBounds(250, 90, 150, 30);
       
        JLabel label = new JLabel("Input Sequence");
        label.setBounds(230, 200, 200, 30);
        label.setFont(f2);
        label.setForeground(Color.green);
        
        JTextField text = new JTextField();
        text.setBounds(90, 250, 450, 30);
        JButton testB = new JButton("TestFDA");
        testB.setBounds(280, 320, 90, 45);
      testB.setForeground(Color.red);
        
        JLabel resLabel = new JLabel("Result:");
        resLabel.setBounds(100, 400, 600, 30);
        resLabel.setFont(f3);
        resLabel.setForeground(Color.GREEN);
        JLabel finalLabel = new JLabel();
        finalLabel.setBounds(220, 400, 600, 30);
        finalLabel.setFont(f2);
        finalLabel.setForeground(Color.red);
       // finalLabel.setText("alimonther");
        frame.add(mainText);
       // frame.add(selectFile);
        frame.add(selectBtn);
        frame.add(testB);
        frame.add(label);
        frame.add(text);
        frame.add(finalLabel);
        frame.add(resLabel);
        frame.setSize(640, 480);
        frame.setTitle("FDA Accepter");
        frame.setLayout(null);
        frame.setVisible(true);
        
       //----------------------------------------------
        Scanner input = new Scanner(System.in);
        
        
        String fileName="java.txt";
        ReadDFA rd = new ReadDFA();
        rd.getDFA(filePath);
       // System.out.println("FileName::"+fileName);
        //System.out.println();
//words contain 0s and 1s even
    //-------------------------firstLine/read number of States------------------------------------
        int numberState= Integer.parseInt(rd.statesNumber);
       // System.out.println("Number of States:"+rd.statesNumber);
    //-------------------------secondLine/read a final states-------------------------------------
        int finalStates[] = new int[rd.finalStatesNumber.length()/3];
        String finalStringState [] = new String[finalStates.length];
        int l=0;
            for (int i = 0; i < finalStringState.length; i++) 
            {
                finalStringState[i]= rd.finalStatesNumber.substring(l,l+3);
                l+=3;
            }
            for (int i = 0; i < finalStates.length; i++)
                {
                        finalStates[i] = Integer.parseInt(finalStringState[i]);
                }
            /*for (int i = 0; i < finalStates.length; i++)
                {
                    System.out.println("final State["+i+"]"+finalStates[i]);
                }*/
    //------------------------thirdLine/read Alphapet---------------------------------------------    
        char alpha[]=new char[rd.Alphapet.length()];
            for (int i = 0; i < rd.Alphapet.length(); i++)
            {
                alpha[i]= rd.Alphapet.charAt(i);
            }
            //System.out.print("Alphapet:");
            /*for (int i = 0; i < rd.Alphapet.length(); i++)
            {
                System.out.print(alpha[i]+"/");
            }
            System.out.println("");*/
    //-----------------------fourthLine/read States table-------------------------------------------------
        int Table[][]= new int[Integer.parseInt(rd.statesNumber)][rd.Alphapet.length()];
        int lenAlpha=0;
            while(lenAlpha!=alpha.length)
                {
                    lenAlpha++;
                }
        int[]temp=new int[lenAlpha*numberState];
        String[]StringTable = new String[temp.length];
        int h=0;
    //move Table States String from file to StringTable Array
        //System.out.println("ali");
       
        for (int i = 0; i < temp.length; i++) 
            {  
               StringTable[i]=rd.states.substring(h,h+3);
               h+=3;
            }
              

    // init temp array and parsing stringTable to Integer
        for (int i = 0; i < temp.length; i++) 
            {  
             temp[i]=Integer.parseInt(StringTable[i]);
               
            }
        int s=0;
    // move states table to 2D Array
        for (int i = 0; i < Integer.parseInt(rd.statesNumber); i++)
            {
                for (int j = 0; j < rd.Alphapet.length(); j++)
                    { 
                        Table[i][j]=temp[s];
                        s++;
                    }
            }
    //print states Table 
     /*   for (int i = 0; i < Integer.parseInt(rd.statesNumber); i++)
           {
                for (int j = 0; j < rd.Alphapet.length(); j++)
                    {
                        System.out.print(Table[i][j]+"\t");
                    }
                System.out.println("");
           }
       // System.out.println("monther");*/
    //----------------------------------    
        DFA dfa=new DFA(numberState,finalStates,alpha,Table);
        String myWord;
 testB.addActionListener(new ActionListener()
              {
         @Override
         
         public void actionPerformed(ActionEvent ae)
         {
              textFieldValue = text.getText();
             System.out.println(textFieldValue);
             word=textFieldValue.toCharArray();
              // .... do some operation on value ...
             
         }
                });
        while (true) {
            
             myWord = textFieldValue;
             char[] word = myWord.toCharArray();
             
           // System.out.println(dfa.testString(word));
            
            if(dfa.testString(word))
            {
             finalLabel.setText(Type(word));
                Thread.sleep(1000);
             finalLabel.setText("false");
                
                Type(word);
            }
        }
          
        
        
        
        
    }
    /*
    
    
001008019031102040102102048102102077102102102102102102102080102102102102102102097097097097097097097097097097102102086102102102
102002102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102003102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102004102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102005102102102102102102102102102102102102102102102102102102102102102102102102
006102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102007102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102009102102014102102102102102102017102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102010102102102102102102102102102102102102102102102102102102102102102102102102102102102 
102102102102102102102102102102102011102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102012102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
013102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102015102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
016102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102018102102102102102102102102102102102102102102102102102102102102102102
102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
020102102102102102102102102102102102102102024102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102021022102102102102102102102102102102102102102102102102102102102102102102
102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102023102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102025102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102026027102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102028102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102029102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102030102102102102102102102102102102102102102102102102102102102102102
102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102032102102102102102102102102102089102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102033102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
034102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102035102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102036102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102
102038102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102039102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102090102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102041102102045102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102042102102102102102102102102102102102102102102102102102102102102102102102102102102102102
043102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102091102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102046102102102102102102102102102102102102102102102102102102102102102102102102102102102
047102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102092102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102049059102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102050102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102051102102057102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102052102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102053102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102054102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102055102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102056102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102058102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102060093102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102061102102102102102102102102102102102102102102102102102102102102102102
062102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102063102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102064102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102065102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102066102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102068102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102069102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
070102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102071102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102101102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
073073073073073073073073073073073073073073073073073073073073073073073073073073102102102102102102102102102102102102102102102102
073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073073102102102102074102
102102102102102102102102102102102102102102102102102102102102102102102102102102075075075075075075075075075075102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102075075075075075075075075075075076102102102102094
102102102102102102102102102102102102102102102102102102102102102102102102102102076076076076076076076076076076102102102102102094
102102102102102102102102102102102102102102078102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102079102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102095102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102081102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102082102102102102102102102102083102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102084102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102096102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102098098098098098098098098098098102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102087100102102102
087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087087088087087087087
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102099102102102
102102102102102102102102102102102102102102102102102102102102037102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102072102102
102102102102102102102102102102102044102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102072102102
102102102102067102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102072102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102086102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102072102102
102102102102102102102102102102102102102102102102102102101102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102097097097097097097097097097097085102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102098098098098098098098098098098102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100100
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102
102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102102

    
    */

    
    
}
